//tables
CREATE TABLE IF NOT EXISTS carts (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    status VARCHAR(50) DEFAULT 'active',
    delivery_fee NUMERIC(10,2) DEFAULT 0.00,
    total_amount NUMERIC(10,2) DEFAULT 0.00,
    delivery_address TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
 CREATE TABLE IF NOT EXISTS cart_items (
       id SERIAL PRIMARY KEY,
    cart_id INTEGER REFERENCES carts(id) ON DELETE CASCADE,
    food_donation_id INTEGER REFERENCES food_donations(id),
    donor_id INTEGER REFERENCES donors(id),
    quantity INTEGER DEFAULT 1,
    item_total DECIMAL(10,2) DEFAULT 0.00,
    status VARCHAR(50) DEFAULT 'active',
    notes TEXT,
    is_from_past_event BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(cart_id, food_donation_id)
);
  CREATE TABLE IF NOT EXISTS chats (
            id SERIAL PRIMARY KEY,
            user_id INTEGER REFERENCES users(id),
            related_entity_id INTEGER,
            entity_type VARCHAR(50),
            timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            message_content TEXT
 );
  CREATE TABLE IF NOT EXISTS crm_records (
            id SERIAL PRIMARY KEY,
            user_id INTEGER REFERENCES users(id),
            interaction_type VARCHAR(50),
            interaction_date TIMESTAMP WITH TIME ZONE,
            notes TEXT
 );
  CREATE TABLE IF NOT EXISTS delivery_routes (
            id SERIAL PRIMARY KEY,
            order_id INTEGER REFERENCES orders(id),
            total_distance DECIMAL(10, 2),
            estimated_duration INTEGER, -- in minutes
            status VARCHAR(50) DEFAULT 'pending',
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS deliveries (
            id SERIAL PRIMARY KEY,
            request_id INTEGER REFERENCES orders(id),
            driver_id INTEGER REFERENCES drivers(id),
            delivery_status VARCHAR(50),
            pickup_time TIMESTAMP WITH TIME ZONE,
            estimated_delivery_time TIMESTAMP WITH TIME ZONE,
            actual_delivery_time TIMESTAMP WITH TIME ZONE,
            delivery_time TIMESTAMP WITH TIME ZONE,
            gps_location VARCHAR(255),
            delivery_confirmation VARCHAR(255),
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
         CREATE TABLE IF NOT EXISTS donors (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    donor_type VARCHAR(50),
    organization_name VARCHAR(255),
    organization_details TEXT,
    contact_person VARCHAR(255),
    contact_number VARCHAR(50),
    operating_hours VARCHAR(255),
    is_verified BOOLEAN DEFAULT FALSE,
    verification_date TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
 CREATE TABLE IF NOT EXISTS driver_location_history (
        id SERIAL PRIMARY KEY,
        driver_id INTEGER REFERENCES drivers(id),
        latitude DECIMAL(10, 7),
        longitude DECIMAL(10, 7),
        timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        accuracy DECIMAL(10, 2),
        heading INTEGER,
        speed DECIMAL(6, 2),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    );
      CREATE TABLE IF NOT EXISTS driver_locations (
            id SERIAL PRIMARY KEY,
            driver_id INTEGER REFERENCES users(id),
            latitude DECIMAL(10, 6) NOT NULL,
            longitude DECIMAL(10, 6) NOT NULL,
            timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
         CREATE TABLE IF NOT EXISTS drivers (
            id SERIAL PRIMARY KEY,
            username VARCHAR(50) NOT NULL UNIQUE,
            password VARCHAR(100) NOT NULL,
            email VARCHAR(100) NOT NULL UNIQUE,
            phone VARCHAR(15) NOT NULL UNIQUE,
            address VARCHAR(255),
            profile_picture VARCHAR(255),
            vehicle_type VARCHAR(50) NOT NULL,
            vehicle_number VARCHAR(50) NOT NULL,
            license_number VARCHAR(50) NOT NULL,
            availability_status VARCHAR(20) DEFAULT 'OFFLINE',
            current_location POINT,
            service_area VARCHAR(255),
            max_delivery_distance INTEGER,
            rating DECIMAL(3,2) DEFAULT 0.00,
            total_deliveries INTEGER DEFAULT 0,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
         CREATE TABLE IF NOT EXISTS erp_records (
            id SERIAL PRIMARY KEY,
            user_id INTEGER REFERENCES users(id),
            operation_type VARCHAR(50),
            operation_date TIMESTAMP WITH TIME ZONE,
            resource_details TEXT,
            notes TEXT
        );
               CREATE TABLE IF NOT EXISTS food_allocations (
  id SERIAL PRIMARY KEY,
  food_donation_id INTEGER REFERENCES food_donations(id),
  ngo_id INTEGER REFERENCES ngos(id),
  allocated_quantity DECIMAL(10,2),
  allocated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  accepted BOOLEAN DEFAULT FALSE,
  pickup_scheduled BOOLEAN DEFAULT FALSE,
  pickup_completed BOOLEAN DEFAULT FALSE,
  allocation_status VARCHAR(50) DEFAULT 'PENDING'
);
CREATE TABLE IF NOT EXISTS food_donations (
    id SERIAL PRIMARY KEY,
    donor_id INTEGER REFERENCES donors(id),
    food_type VARCHAR(50),
    food_category VARCHAR(50),
    quantity INTEGER,
    servings INTEGER,
    weight_kg DECIMAL(10,2),
    package_size VARCHAR(50),
    expiration_time TIMESTAMP WITH TIME ZONE,
    pickup_location VARCHAR(255),
    image VARCHAR(255),
    image_url VARCHAR(255),
    image_storage VARCHAR(50),
    availability_schedule VARCHAR(255),
    status VARCHAR(50),
    event_is_over BOOLEAN DEFAULT TRUE,
    event_type VARCHAR(50),
    preparation_method VARCHAR(50),
    pricing VARCHAR(20),
    total_quantity DECIMAL(10,2),
    number_of_guests INTEGER,
    remaining_quantity DECIMAL(10,2)
);
   CREATE TABLE IF NOT EXISTS food_requests (
            id SERIAL PRIMARY KEY,
            ngo_id INTEGER REFERENCES ngos(id),
            donation_id INTEGER REFERENCES food_donations(id),
            request_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            request_status VARCHAR(50)
        );
        CREATE TABLE IF NOT EXISTS ngos (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    ngo_name VARCHAR(255),
    mission_statement TEXT,
    contact_person VARCHAR(255),
    contact_number VARCHAR(50),
    operating_hours VARCHAR(255),
    target_demographics TEXT,
    ngo_type VARCHAR(50),
    registration_number VARCHAR(100),
    registration_certificate TEXT,
    registration_certificate_url VARCHAR(255),
    registration_certificate_storage VARCHAR(50),
    pan_number VARCHAR(20),
    pan_card_image TEXT,
    pan_card_image_url VARCHAR(255),
    pan_card_image_storage VARCHAR(50),
    fcra_number VARCHAR(100),
    fcra_certificate TEXT,
    fcra_certificate_url VARCHAR(255),
    fcra_certificate_storage VARCHAR(50),
    tax_exemption_certificate TEXT,
    tax_exemption_certificate_url VARCHAR(255),
    tax_exemption_certificate_storage VARCHAR(50),
    annual_reports_link VARCHAR(255),
    is_verified BOOLEAN DEFAULT FALSE,
    can_place_orders BOOLEAN DEFAULT FALSE,
    verification_date TIMESTAMP WITH TIME ZONE,
    storage_capacity_kg DECIMAL(10,2) DEFAULT 0,
    latitude DECIMAL(10,6),
    longitude DECIMAL(10,6),
    vehicle_capacity_kg DECIMAL(10,2) DEFAULT 0,
    food_preferences TEXT[],
    priority_level INTEGER DEFAULT 1,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
 CREATE TABLE IF NOT EXISTS notifications (
            id SERIAL PRIMARY KEY,
            user_id INTEGER REFERENCES users(id),
            notification_type VARCHAR(50),
            notification_content TEXT,
            timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            is_read BOOLEAN DEFAULT FALSE
        );
            CREATE TABLE IF NOT EXISTS orders (
                id SERIAL PRIMARY KEY,
    cart_id INTEGER REFERENCES carts(id),
    user_id INTEGER REFERENCES users(id),
    order_status VARCHAR(50) DEFAULT 'pending',
    payment_status VARCHAR(50) DEFAULT 'pending',
    payment_method VARCHAR(50),
    delivery_fee NUMERIC(10,2) DEFAULT 0.00,  -- Changed to NUMERIC
    total_amount NUMERIC(10,2) DEFAULT 0.00,   -- Changed to NUMERIC
    delivery_address TEXT,
    order_notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS recipients (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    recipient_name VARCHAR(255),
    recipient_details TEXT,
    contact_person VARCHAR(255),
    contact_number VARCHAR(50),
    id_type TEXT,
    id_number TEXT,
    id_image TEXT,
    id_image_url VARCHAR(255),
    id_image_storage VARCHAR(50),
    address TEXT,
    proof_of_need TEXT,
    proof_of_need_url VARCHAR(255),
    proof_of_need_storage VARCHAR(50),
    is_verified BOOLEAN DEFAULT FALSE,
    can_place_orders BOOLEAN DEFAULT FALSE,
    verification_date TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
   CREATE TABLE IF NOT EXISTS route_points (
            id SERIAL PRIMARY KEY,
            route_id INTEGER REFERENCES delivery_routes(id) ON DELETE CASCADE,
            point_order INTEGER NOT NULL,
            point_type VARCHAR(20) NOT NULL, -- 'pickup' or 'delivery'
            location_id INTEGER, -- ID of the donor or NGO
            latitude DECIMAL(10, 6) NOT NULL,
            longitude DECIMAL(10, 6) NOT NULL,
            address TEXT NOT NULL,
            description TEXT,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(50),
    role VARCHAR(50),
    profile_picture VARCHAR(255),
    profile_picture_url VARCHAR(255),
    profile_picture_storage VARCHAR(50),
    address TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
 CREATE TABLE IF NOT EXISTS verification_logs (
    id SERIAL PRIMARY KEY,
    entity_type VARCHAR(50) NOT NULL, -- 'ngo', 'donor', or 'recipient'
    entity_id INTEGER NOT NULL,
    verified_by INTEGER REFERENCES users(id),
    verification_notes TEXT,
    status VARCHAR(50) NOT NULL, -- 'pending', 'approved', 'rejected'
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);